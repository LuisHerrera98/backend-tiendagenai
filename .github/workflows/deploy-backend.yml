name: Deploy Backend TiendaGenAI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          echo "=== Iniciando deploy backend TiendaGenAI ==="
          
          # Cargar NVM
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          
          # Crear directorio de proyectos si no existe
          mkdir -p /home/ubuntu/projects/tiendagenai
          
          # Verificar si existe el proyecto, si no clonarlo
          if [ ! -d "/home/ubuntu/projects/tiendagenai/backend-tiendagenai" ]; then
            echo "=== Clonando proyecto backend TiendaGenAI ==="
            cd /home/ubuntu/projects/tiendagenai
            git clone https://github.com/${{ github.repository }}.git backend-tiendagenai
          fi
          
          # Navegar al directorio del proyecto
          cd /home/ubuntu/projects/tiendagenai/backend-tiendagenai
          
          echo "=== Verificando comandos ==="
          /home/ubuntu/.nvm/versions/node/v22.17.0/bin/node --version
          /home/ubuntu/.nvm/versions/node/v22.17.0/bin/npm --version
          /home/ubuntu/.nvm/versions/node/v22.17.0/bin/pm2 --version
          
          echo "=== Haciendo git pull ==="
          git pull origin main
          
          echo "=== Memoria disponible antes de npm install ==="
          free -h
          
          echo "=== Instalando dependencias ==="
          /home/ubuntu/.nvm/versions/node/v22.17.0/bin/npm install
          
          echo "=== Creando archivo .env ==="
          cat > .env << EOF
          NODE_ENV=production
          PORT=3000
          MONGODB_URI=${{ secrets.MONGODB_URI }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}
          CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
          EMAIL_USER=${{ secrets.EMAIL_USER }}
          EMAIL_PASS=${{ secrets.EMAIL_PASS }}
          FRONTEND_URL=${{ secrets.FRONTEND_URL }}
          DOMAIN=tiendagenai.com
          EOF
          
          echo "=== Construyendo proyecto ==="
          NODE_OPTIONS="--max-old-space-size=1024" /home/ubuntu/.nvm/versions/node/v22.17.0/bin/npm run build
          
          echo "=== Deploy sin downtime ==="
          if /home/ubuntu/.nvm/versions/node/v22.17.0/bin/pm2 list | grep -q "backend-tiendagenai"; then
            echo "Proceso existente encontrado - Reload sin downtime"
            /home/ubuntu/.nvm/versions/node/v22.17.0/bin/pm2 reload backend-tiendagenai
          else
            echo "Proceso no existe - Iniciando nuevo"
            /home/ubuntu/.nvm/versions/node/v22.17.0/bin/pm2 start --name backend-tiendagenai "npm start"
          fi
          
          echo "=== Guardando configuración PM2 ==="
          /home/ubuntu/.nvm/versions/node/v22.17.0/bin/pm2 save
          
          echo "=== Estado actual de PM2 ==="
          /home/ubuntu/.nvm/versions/node/v22.17.0/bin/pm2 list
          
          echo "=== Memoria después del deploy ==="
          free -h
          
          echo "=== Deploy backend completado ==="